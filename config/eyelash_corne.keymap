#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        alt_p: alt-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_N0>, <&kp LS(TAB)>;

            mods = <(MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        gui_p: gui-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_N0>, <&kp LEFT_ARROW>;

            mods = <(MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };

        ag_p: alt-gui-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&gui_p>, <&alt_p>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        arrow_p: arrow-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ARROW>, <&kp DOWN>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        vol_arrow_p: volume-arrow-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&arrow_p>;

            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };

        vol_alt_gui_p: volume-alt-gui-positive {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&vol_arrow_p>, <&ag_p>;

            mods = <(MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };

        alt_n: alt-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_N0>, <&kp TAB>;

            mods = <(MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        gui_n: gui-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_N0>, <&kp RIGHT_ARROW>;

            mods = <(MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };

        ag_n: alt-gui-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&gui_n>, <&alt_n>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        arrow_n: arrow-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_ARROW>, <&kp UP>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        vol_arrow_n: volume-arrow-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&arrow_n>;

            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };

        vol_alt_gui_n: volume-right-alt-gui-negative {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&vol_arrow_n>, <&ag_n>;

            mods = <(MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };

        vol_alt_tab: volume-alt-tab {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&vol_alt_gui_n>, <&vol_alt_gui_p>;

            tap-ms = <10>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB           &kp Q    &kp W  &kp E                    &kp R        &kp T                                 &kp UP                &kp Y                 &kp U        &kp I                    &kp O    &kp P            &kp MINUS
&kp LEFT_CONTROL  &lt 3 A  &kp S  &kp D                    &kp F        &kp G                       &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                 &kp J        &kp K                    &kp L    &lt 3 SEMICOLON  &kp SQT
&kp LEFT_SHIFT    &kp Z    &kp X  &kp C                    &kp V        &kp B          &kp SPACE              &kp DOWN              &kp N                 &kp M        &kp COMMA                &kp DOT  &kp FSLH         &kp EQUAL
                                  &mt LEFT_WIN LANGUAGE_2  &lt 2 SPACE  &mt LCTRL TAB                                               &mt LSHIFT BACKSPACE  &lt 1 ENTER  &mt LEFT_ALT LANGUAGE_1
            >;

            sensor-bindings = <&vol_alt_tab>;
        };

        number {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3    &kp N4                &kp N5                                     &mmv MOVE_UP                     &kp N6         &kp N7                 &kp N8        &kp N9           &kp N0            &kp TILDE
&trans  &kp LESS_THAN    &kp LEFT_BRACE  &kp LBKT  &kp LEFT_PARENTHESIS  &kp PIPE                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp AMPERSAND  &kp RIGHT_PARENTHESIS  &kp RBKT      &kp RIGHT_BRACE  &kp GREATER_THAN  &kp GRAVE
&trans  &kp EXCLAMATION  &kp AT_SIGN     &kp HASH  &kp DOLLAR            &kp PERCENT  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp CARET      &kp PLUS               &kp ASTERISK  &kp UNDERSCORE   &kp BSLH          &kp PLUS
                                         &trans    &kp LANG2             &trans                                                                      &kp BACKSPACE  &trans                 &trans
            >;

            sensor-bindings = <&vol_alt_tab>;
        };

        raise {
            display-name = "RAISE";
            bindings = <
&trans  &kp PAGE_UP     &kp PAGE_DOWN  &kp HOME   &kp END       &kp LG(TAB)                                  &mmv MOVE_UP                     &kp LG(LC(D))  &kp LG(LC(LEFT_ARROW))  &kp UP_ARROW    &kp LG(LC(RIGHT_ARROW))  &kp LG(LC(F4))  &kp ESC
&trans  &kt LEFT_SHIFT  &kp LCTRL      &kp LALT   &kp LEFT_WIN  &kp ESCAPE                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp F2         &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT                &kp TAB         &kp F12
&trans  &kp LC(Z)       &kp LC(X)      &kp LC(C)  &kp LC(V)     &kp LG(LS(S))  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp F6         &kp F7                  &kp F8          &kp F9                   &kp F10         &kp F11
                                       &trans     &trans        &trans                                                                        &trans         &kp LANGUAGE_1          &trans
            >;

            sensor-bindings = <&vol_alt_tab>;
        };

        mouse {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans                              &mmv MOVE_UP                     &trans     &trans          &mmv MOVE_UP    &trans           &trans  &trans
&trans  &trans  &mkp MCLK  &mkp RCLK  &mkp LCLK  &trans              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans    &trans                    &mmv MOVE_DOWN                   &trans     &trans          &trans          &trans           &trans  &trans
                           &trans     &mkp MB4   &mkp MB5                                                             &mkp LCLK  &mkp RCLK       &mkp MCLK
            >;

            label = "MOUSE";
            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        layer_5 {
            display-name = "NUMBER";
            bindings = <
&trans  &kp F1           &kp F2          &kp F3        &kp F4        &kp F5                                         &mmv MOVE_UP                     &kp F6           &kp F7           &kp F8           &kp F9           &kp F10  &kp F11
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &trans   &kp F12
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans   &trans
                                         &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
